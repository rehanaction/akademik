<?php	// model presensi	defined( '__VALID_ENTRANCE' ) or die( 'Akses terbatas' );		require_once(Route::getModelPath('model'));		class mPresensi extends mModel {		const schema = 'sdm';				//mendapatkan data rekap presensi		function listQueryRekapPresensi($r_key) {			$sql = "select r.*					from ".self::table('pe_presensi')." r 					where idpegawai='$r_key'";						return $sql;		}				//input presensi		function listQueryInputPresensi($r_key) {			$sql = "select r.*,a.absensi					from ".self::table('pe_presensidet')." r 					left join ".self::table('ms_absensi')." a on a.kodeabsensi=r.kodeabsensi					where idpegawai='$r_key' and r.kodeabsensi in ('I','S','H') and ismanual='Y'";						return $sql;		}				function listQueryMonitor(){			$sql = "select p.*,m.nik, sdm.f_namalengkap(m.gelardepan,m.namadepan,m.namatengah,m.namabelakang,m.gelarbelakang) as namalengkap 					from ".static::table('pe_presensidet')." p					left join ".static::table('ms_pegawai')." m on m.idpegawai=p.idpegawai					left join ".static::table('ms_unit')." u on u.idunit=m.idunit";						return $sql;		}				function listQueryShiftBulan(){			$sql = "select * from ".static::table('pe_rwtshift');						return $sql;		}				function getDataInputPresensi($r_key,$r_subkey) {			$sql = "select *					from ".self::table('pe_presensidet')."					where idpegawai='$r_key' and kodeabsensi in ('I','S','H') and tglpresensi = '$r_subkey' and nomesin is null";						return $sql;		}				function jenisAbsensi($conn){			$sql = "select kodeabsensi, absensi from ".static::table('ms_absensi')." where kodeabsensi in ('I','S','H') order by kodeabsensi desc";						return Query::arrQuery($conn, $sql);		}				function isPejabat($conn, $r_pegawai){			$sql = "select 1 from ".static::table('ms_pegawai')." where idpegawai=$r_pegawai and idjstruktural is not null";						return $conn->GetOne($sql);		}				// mendapatkan tahun rekap presensi pegawai ybs		function getTahunPresensi($conn,$r_key){			$sql = "select substring(periode,1,4) as tahun from ".self::table('pe_presensi')." 					where idpegawai = $r_key					group by substring(periode,1,4)";			$rs = $conn->Execute($sql);						$data = array();			while($row = $rs->FetchRow()){				$data[$row['tahun']] = $row['tahun'];			}						return $data;		}				// mendapatkan potongan kueri filter list		function getListFilter($col,$key) {			if($col == 'unit') {				global $conn, $conf;				require_once($conf['gate_dir'].'model/m_unit.php');								$row = mUnit::getData($conn,$key);								return "u.infoleft >= ".(int)$row['infoleft']." and u.inforight <= ".(int)$row['inforight'];			}			if($col == 'bulan')				return "substring(cast(cast(k.tglpenugasan as date) as varchar),6,2) = '$key'";			if($col == 'tahun')				return "substring(cast(cast(k.tglpenugasan as date) as varchar),1,4) = '$key'";			if($col == 'periode')				return "substring(r.periode ,1,4) = '$key'";			if($col == 'tglpresensi')				return "cast(tglpresensi as date) = '".CStr::formatDate($key)."'";					}						//pop detail presensi		function getPresensi($conn,$r_key,$r_periode){						$sql = "select d.*, a.absensi					from ".self::table('pe_presensidet')." d					left join ".self::table('ms_absensi')." a on a.kodeabsensi=d.kodeabsensi					where idpegawai='$r_key' and (substring(cast(tglpresensi as varchar),1,4)+substring(cast(tglpresensi as varchar),6,2)) = '$r_periode'					order by d.tglpresensi";			$rs = $conn->Execute($sql);						while($row = $rs->FetchRow()){				$t_data[$row['tglpresensi'].$row['idpegawai']] = $row;			}						return $t_data;		}				//hari utk detail		function hariAbsensi(){			return array('0'=>'Minggu','1'=>'Senin','2'=>'Selasa','3'=>'Rabu','4'=>'Kamis','5'=>'Jumat','6'=>'Sabtu');		}				//mendapatkan hari libur		function getHariLibur($conn,$r_periode){			$sql = "select d.tgllibur,l.namaliburan,l.keterangan 					from ".self::table('ms_liburdetail')." d					left join ".self::table('ms_libur')." l on l.idliburan=d.idliburan					where (substring(cast(d.tgllibur as varchar),1,4)+substring(cast(d.tgllibur as varchar),6,2)) = '$r_periode' and 					datepart(dw,d.tgllibur) <> 1 and datepart(dw,d.tgllibur) <> 7";								$rs = $conn->Execute($sql);				while($row = $rs->FetchRow()){				$a_data[$row['tgllibur']] = $row;			}						return $a_data;		}				//mendapatkan cuti ke presensi		function saveFromCuti($conn,$r_key){			//select cuti yang sudah disetujui			$rowv = $conn->GetRow("select c.*,m.jeniscuti					from ".self::table('pe_rwtcuti')." c					left join ".self::table('ms_cuti')." m on m.idjeniscuti = c.idjeniscuti					where c.nourutcuti = '$r_key'");						//hapus absensi dulu, utk membersihkan cuti di absensi			$conn->Execute("delete from ".self::table('pe_presensidet')." where nourutcuti = '$r_key' and kodeabsensi = 'C' and jamdatang is null and jampulang is null");			$rsdet = $conn->Execute("select tglpresensi,idpegawai,kodeabsensi from ".self::table('pe_presensidet')." where nourutcuti = '$r_key'");			while($rowdet = $rsdet->FetchRow()){				if(empty($rowdet['kodeabsensi']))					$conn->Execute("update ".self::table('pe_presensidet')." set kodeabsensi = 'A' where idpegawai = ".$rowdet['idpegawai']." and tglpresensi = '".$rowdet['tglpresensi']."'");			}			$conn->Execute("update ".self::table('pe_presensidet')." set nourutcuti = null where nourutcuti = '$r_key'");						//bila disetujui, maka insert ke presensi			if($rowv['statususulan'] == 'S'){				$rsd = $conn->Execute("select * from ".self::table('pe_rwtcutidet')." where nourutcuti = '$r_key' and ischange is null");								while($rowd = $rsd->FetchRow()){					$mulai=strtotime($rowd['tglmulai']);					$selesai=strtotime($rowd['tglselesai']);					$artgl=array();					$i=0;							while($mulai<=$selesai){						$nefektif=date("w",$mulai);						if($nefektif != 0 and $nefektif != 6)							$artgl[$i++] = date('Y-m-d',$mulai);								$mulai+=86400;					}							if(count($artgl)>0){						$libur = $conn->Execute("select tgllibur from ".self::table('ms_liburdetail')." 								where tgllibur between '".$rowd['tglmulai']."' and '".$rowd['tglselesai']."' and 								datepart(dw,tgllibur) <> 1 and datepart(dw,tgllibur) <> 7");						//Cek apakah hari cuti dalam hari liburan								while($rowl = $libur->FetchRow()){							if(in_array($rowl['tgllibur'],$artgl))								unset($artgl[array_search($rowl['tgllibur'],$artgl)]);						}												//cek shift dari presensi						$rss = $conn->Execute("select tglpresensi from ".self::table('pe_presensidet')." 								where tglpresensi between '".$rowd['tglmulai']."' and '".$rowd['tglselesai']."' 								and sjamdatang is not null and sjampulang is not null and idpegawai = ".$rowv['idpegawai']".");												while($rows = $rss->FetchRow()){							if(in_array($rows['tglpresensi'],$artgl))								unset($artgl[array_search($rows['tglpresensi'],$artgl)]);						}												//insert ke absensi							if(count($artgl)>0){											foreach($artgl as $keys=>$val){								$recabs = array();								$recabs['idpegawai'] = $rowv['idpegawai'];								$recabs['nourutcuti'] = $r_key;								$recabs['tglpresensi'] = $val;								$recabs['kodeabsensi'] = 'C';								$recabs['tglpemasukan'] = date('Y-m-d');								$recabs['keterangan'] = 'Cuti '.$rowv['jeniscuti'].($rowv['keterangan'] != '' ? ' ('.$rowv['keterangan'].')' : '');																								$isexist = $conn->GetOne("select 1 from ".self::table('pe_presensidet')." where idpegawai = '".$rowv['idpegawai']."' and tglpresensi = '$val'");								if(empty($isexist))									Query::recInsert($conn,$recabs,self::table('pe_presensidet'));								else									Query::recUpdate($conn,$recabs,self::table('pe_presensidet'),"idpegawai = '".$rowv['idpegawai']."' and tglpresensi = '$val'");							}						}					}				}			}		}				//jika hapus cuti, maka juga hapus presensi yang cuti saja		function deleteFromCuti($conn,$r_key){			$conn->Execute("delete from ".self::table('pe_presensidet')." where nourutcuti = '$r_key' and kodeabsensi = 'C' and jamdatang is null and jampulang is null");			$rsdet = $conn->Execute("select tglpresensi,idpegawai,kodeabsensi from ".self::table('pe_presensidet')." where nourutcuti = '$r_key'");			while($rowdet = $rsdet->FetchRow()){				if(empty($rowdet['kodeabsensi']))					$conn->Execute("update ".self::table('pe_presensidet')." set kodeabsensi = 'A' where idpegawai = ".$rowdet['idpegawai']." and tglpresensi = '".$rowdet['tglpresensi']."'");			}			$conn->Execute("update ".self::table('pe_presensidet')." set nourutcuti = null where nourutcuti = '$r_key'");		}				function saveFormDinas($conn,$r_key){			$sql = "select r.*, j.namajenisdinas from ".static::table('pe_rwtdinas')." r 					left join ".static::table('ms_jenisdinas')." j on j.kodejenisdinas=r.kodejenisdinas					where nodinas=$r_key";			$row = $conn->GetRow($sql);						//hapus absensi dulu, utk membersihkan cuti di absensi			$conn->Execute("delete from ".self::table('pe_presensidet')." where nodinas = '$r_key' and kodeabsensi = 'D' and jamdatang is null and jampulang is null");			$rsdet = $conn->Execute("select tglpresensi,idpegawai,kodeabsensi from ".self::table('pe_presensidet')." where nodinas = '$r_key'");			while($rowdet = $rsdet->FetchRow()){				if(empty($rowdet['kodeabsensi']))					$conn->Execute("update ".self::table('pe_presensidet')." set kodeabsensi = 'A' where idpegawai = ".$rowdet['idpegawai']." and tglpresensi = '".$rowdet['tglpresensi']."'");			}			$conn->Execute("update ".self::table('pe_presensidet')." set nodinas = null where nodinas = '$r_key'");						//bila disetujui, maka insert ke presensi			if($row['issetujuatasan'] == 'S' and $row['issetujuwarek2'] == 'S' and $row['issetujukabagkeu'] == 'S' and $row['issetujukasdm'] == 'S'){				$mulai=strtotime($row['tglpergi']);				$selesai=strtotime($row['tglpulang']);				$artgl=array();				$i=0;						while($mulai<=$selesai){					$nefektif=date("w",$mulai);					if($nefektif != 0 and $nefektif != 6)						$artgl[$i++] = date('Y-m-d',$mulai);							$mulai+=86400;				}						if(count($artgl)>0){					$libur = $conn->Execute("select tgllibur from ".self::table('ms_liburdetail')." 							where tgllibur between '$row[tglpergi]' and '$row[tglpulang]' and 							datepart(dw,tgllibur) <> 1 and datepart(dw,tgllibur) <> 7");					//Cek apakah hari cuti dalam hari liburan							while($rowl = $libur->FetchRow()){						if(in_array($rowl['tgllibur'],$artgl))							unset($artgl[array_search($rowl['tgllibur'],$artgl)]);					}											//insert ke absensi						if(count($artgl)>0){										foreach($artgl as $keys=>$val){							$recabs = array();							$recabs['idpegawai'] = $row['pegditunjuk'];							$recabs['nodinas'] = $r_key;							$recabs['tglpresensi'] = $val;							$recabs['kodeabsensi'] = 'D';							$recabs['tglpemasukan'] = date('Y-m-d');							$recabs['keterangan'] = 'Dinas '.$row['namajenisdinas'].' ('.$row['dalamrangka'].')';																							$isexist = $conn->GetOne("select 1 from ".self::table('pe_presensidet')." where idpegawai = '".$row['pegditunjuk']."' and tglpresensi = '$val'");							if(empty($isexist))								Query::recInsert($conn,$recabs,self::table('pe_presensidet'));							else								Query::recUpdate($conn,$recabs,self::table('pe_presensidet'),"idpegawai = '".$row['pegditunjuk']."' and tglpresensi = '$val'");						}					}				}			}		}				function deleteFormDinas($conn,$r_key){			$conn->Execute("delete from ".self::table('pe_presensidet')." where nodinas = '$r_key' and kodeabsensi = 'D' and jamdatang is null and jampulang is null");			$rsdet = $conn->Execute("select tglpresensi,idpegawai,kodeabsensi from ".self::table('pe_presensidet')." where nodinas = '$r_key'");			while($rowdet = $rsdet->FetchRow()){				if(empty($rowdet['kodeabsensi']))					$conn->Execute("update ".self::table('pe_presensidet')." set kodeabsensi = 'A' where idpegawai = ".$rowdet['idpegawai']." and tglpresensi = '".$rowdet['tglpresensi']."'");			}			$conn->Execute("update ".self::table('pe_presensidet')." set nodinas = null where nodinas = '$r_key'");		}				function saveDetailShift($conn,$idpegawai,$tglmulai,$tglselesai,$kelkerja){			$sql = "delete from ".static::table('pe_presensidet')." where idpegawai=$idpegawai and tglpresensi<cast(getdate() as varchar)";			$conn->Execute($sql);						$tglmulai = date("Y-m-d");						$a_ahari = array();			$a_ahari = mPresensi::getDayPresensi();			$a_hari = array();			$a_hari = $a_ahari['aday'];						$a_jamhadir = array();			$a_jamhadir = mPresensi::getJamHadir($conn);						$sql ="select DATEPART(dw, dt) as nohari,dt as tgl,senin,selasa,rabu,kamis,jumat,sabtu,minggu					from sdm.f_generatedates('$tglmulai','$tglselesai') g					left join sdm.ms_kelkerja j on j.kodekelkerja='$kelkerja'";			$rs = $conn->Execute($sql);						while($row = $rs->FetchRow()){				$recabs = array();				$recabs['idpegawai'] = $idpegawai;				$recabs['tglpresensi'] = $row['tgl'];				$recabs['tglpemasukan'] = date('Y-m-d');				$recabs['sjamdatang'] = $a_jamhadir['jamdatang'][$row[$a_hari[$row['nohari']]]];				$recabs['sjampulang'] = $a_jamhadir['jampulang'][$row[$a_hari[$row['nohari']]]];								$isexist = $conn->GetOne("select 1 from ".self::table('pe_presensidet')." where idpegawai = $idpegawai and tglpresensi = '$row[tgl]'");				if(empty($isexist)){										if (empty($recabs['sjamdatang']))						$recabs['kodeabsensi'] = 'L';					else						$recabs['kodeabsensi'] = 'A';					Query::recInsert($conn,$recabs,self::table('pe_presensidet'));				}else					Query::recUpdate($conn,$recabs,self::table('pe_presensidet'),"idpegawai = $idpegawai and tglpresensi = '$row[tgl]'");			}		}				function deleteDetailShift($conn,$r_key){			$col = $conn->GetRow("select idpegawai,tglakhir from ".static::table('pe_rwtharikerja')." where norwthk=$r_key");			$sql = "delete from ".static::table('pe_presensidet')." 					where idpegawai=$col[idpegawai] and tglpresensi between cast(getdate() as date) and '$col[tglakhir]'";			$conn->Execute($sql);		}				function saveDetailShiftBulan($conn,$idpegawai,$r_kode){			$sql = "delete from ".static::table('pe_presensidet')." where idpegawai=$idpegawai and tglpresensi<cast(getdate() as varchar)";			$conn->Execute($sql);						$tglmulai = strtotime(date("Y-m-d"));			$tglselesai = strtotime(date("Y-".substr($r_kode,4,2)."-t"));						if ($tglselesai >= $tglmulai){				$sql ="select tglshift as tgl,jamdatang,jampulang from ".static::table('pe_rwtshiftdet')." where kodeshift='$r_kode'";				$rs = $conn->Execute($sql);				$a_data = array();				while($row = $rs->FetchRow()){					$a_data['sdatang'][$row['tgl']] = $row['jamdatang'];					$a_data['spulang'][$row['tgl']] = $row['jampulang'];				}				while($tglmulai <= $tglselesai){					$tgl = date("Y-m-d",$tglmulai);					$recabs = array();					$recabs['idpegawai'] = $idpegawai;					$recabs['tglpresensi'] = $tgl;					$recabs['tglpemasukan'] = date('Y-m-d');					$recabs['sjamdatang'] = $a_data['sdatang'][$tgl];					$recabs['sjampulang'] = $a_data['spulang'][$tgl];										$isexist = $conn->GetOne("select 1 from ".self::table('pe_presensidet')." where idpegawai = $idpegawai and tglpresensi = '$tgl'");					if(empty($isexist)){											if (empty($recabs['sjamdatang']))							$recabs['kodeabsensi'] = 'L';						else							$recabs['kodeabsensi'] = 'A';						Query::recInsert($conn,$recabs,self::table('pe_presensidet'));					}else						Query::recUpdate($conn,$recabs,self::table('pe_presensidet'),"idpegawai = $idpegawai and tglpresensi = '$tgl'");					$tglmulai+=86400;				}			}		}				function deleteDetailShiftBulan($conn,$r_key,$rkey){			$tglakhir = date("Y-".substr($r_key,4,2)."-t");			$sql = "delete from ".static::table('pe_presensidet')." 					where idpegawai=$rkey and tglpresensi between cast(getdate() as date) and '$tglakhir'";			$conn->Execute($sql);						$a_message = mPresensi::delete($conn,($r_key.'|'.$rkey),'pe_rwtshiftpeg','kodeshift,idpegawai');			return $a_message;		}				function deleteShiftBulan($conn,$r_key){						$tglakhir = date("Y-".substr($r_key,4,2)."-t");			$sql = "delete from ".static::table('pe_presensidet')." 					where idpegawai in (select idpegawai from ".static::table('pe_rwtshiftpeg')." where kodeshift='$r_key') 					and tglpresensi between cast(getdate() as date) and '$tglakhir'";			$conn->Execute($sql);						mPresensi::delete($conn,$r_key,'pe_rwtshiftpeg','kodeshift');			mPresensi::delete($conn,$r_key,'pe_rwtshiftdet','kodeshift');			$a_message = mPresensi::delete($conn,$r_key,'pe_rwtshift','kodeshift');						return $a_message;		}				// mendapatkan kueri list untuk setting kehadiran		function listQuerySetKehadiran() {			$sql = "select * from ".static::table('ms_keterlambatan');						return $sql;		}				// mendapatkan kueri list untuk setting lembur		function listQueryShift() {			$sql = "select * from ".static::table('ms_kelkerja');						return $sql;		}				function getPresensiDate($conn, $date){			$sql = "select idpegawai from ".static::table('pe_presensidet')." where tglpresensi='$date'";			$rs = $conn->Execute($sql);						$a_data = array();			while ($row = $rs->FetchRow()){				$a_data['idpegawai'][$row['idpegawai']] = $row['idpegawai'];				$a_data['norwthk'][$row['idpegawai']] = $row['norwthk'];			}							return $a_data;		}				//digunakan untuk nama kolom hari pada tabel shift		function aCHari(){			return array("senin","selasa","rabu","kamis","jumat","sabtu","minggu");		}				function getCJamHadir($conn){			$sql = "select kodejamhadir, substring(jamdatang,1,2) + ':' + substring(jamdatang,3,2) + ' s/d ' + substring(jampulang,1,2) + ':' + substring(jampulang,3,2) as jam from ".static::table('lv_jamhadir')." order by jamdatang desc";						return Query::arrQuery($conn, $sql);		}				function getJamHadir($conn){			$sql = "select kodejamhadir, jamdatang, jampulang from ".static::table('lv_jamhadir')." order by jamdatang desc";			$rs = $conn->Execute($sql);						$a_data = array();			while ($row = $rs->FetchRow()){				$a_data['jamdatang'][$row['kodejamhadir']] = $row['jamdatang'];				$a_data['jampulang'][$row['kodejamhadir']] = $row['jampulang'];			}						return $a_data;		}				function getKodeShift($conn){			$sql = "select top 1 cast(substring(kodekelkerja,4,4) as int)+1 from ".static::table('ms_kelkerja')." order by kodekelkerja desc";						$inc =  $conn->GetOne($sql);			if (empty($inc))				$kode = 'SHF0001';			else				$kode = 'SHF'.str_pad($inc,'4','0', STR_PAD_LEFT);						return $kode;		}				function getDayPresensi(){			//digunakan untuk menghubungkan dengan nama field			$a_day = array("1" => "minggu", "2" => "senin", "3" => "selasa", "4" => "rabu", "5" => "kamis", "6" => "jumat", "7" => "sabtu");						$a_nameday = array("minggu" => "1", "senin" => "2", "selasa" => "3", "rabu" => "4", "kamis" => "5", "jumat" => "6", "sabtu" => "7");						return array("aday" => $a_day, "nameday" => $a_nameday);		}				//mendapatkan nama lengkap berdasarkan no hand key		function getNamaLengkap($conn){			$sql = "select niphkey,".static::schema.".f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as namalengkap					from ".static::table('ms_pegawai')."					where niphkey is not null";			$rs = $conn->Execute($sql);						while($row = $rs->FetchRow()){				$a_data[$row['niphkey']] = $row['namalengkap'];			}						return $a_data;		}				/**************************************************** CRON SCRIPT ******************************************************/		function getListCronPresensi($conn){						$sql = "select r.idpegawai,cast(getdate() as date)  as tglsekarang, DATEPART(dw, GETDATE()) as nohari, k.* from sdm.pe_rwtharikerja r					left join sdm.ms_kelkerja k on k.kodekelkerja=r.kodekelkerja 					where GETDATE() BETWEEN tglawal and tglakhir";			$rs = $conn->Execute($sql);						$a_data = array();			while ($row = $rs->FetchRow())				$a_data[] = $row;						return $a_data;		}		/**************************************************** END CRON SCRIPT ******************************************************/						/**************************************************** START of HISTORY PRESENSI ******************************************************/				function listQueryRUbahHariKerja($key) {			$sql = "select u.*,jl.jamdatang + ' - ' + jl.jampulang as jamhadirlama,j.jamdatang + ' - ' + j.jampulang as jamhadir 					from ".static::table('pe_ubahharikerja')." u					left join ".static::schema()."lv_jamhadir jl on jl.kodejamhadir=u.kodejamdiubah 					left join ".static::schema()."lv_jamhadir j on j.kodejamhadir=u.kodejamhadir 					where idpegawai=$key";						return $sql;		}				function getCTahunShift($conn){			$sql = "select datepart(year,tglawal) as tahun, datepart(year,tglawal) as id 					from ".static::table('pe_rwtharikerja')."					group by DATEPART(year, tglawal) order by DATEPART(year, tglawal)";						return Query::arrQuery($conn, $sql);		}				function listRJadwalGroup($conn, $key, $r_tahun){			$sql = "select * from ".static::table('v_presensigroup')." where kodekelkerja='$key' and datepart(year,tglawal)='$r_tahun' order by tglawal";						$a_data = array();			$rs = $conn->Execute($sql);			while ($row = $rs->FetchRow())				$a_data[] = $row;							return $a_data;		}				function listRJadwalDate($conn, $key, $r_tahun){			$sql = "select r.*,p.nik,".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as namalengkap 					from ".static::table('pe_rwtharikerja')." r 					left join ".static::schema()."ms_pegawai p on p.idpegawai=r.idpegawai					where kodekelkerja='$key' and datepart(year,r.tglawal)='$r_tahun'";						$a_data = array();			$rs = $conn->Execute($sql);			while ($row = $rs->FetchRow())				$a_data[str_replace('-','',$row['tglawal']).str_replace('-','',$row['tglakhir'])][] = $row;							return $a_data;		}				function infoShift($conn, $key){			$sql = "select * from ".static::table('ms_kelkerja')." where kodekelkerja='$key'";						return $conn->GetRow($sql);		}				function setKodeShift($conn, $r_bulan, $r_tahun){			$r_kode = $r_tahun.str_pad($r_bulan,'2','0', STR_PAD_LEFT);			$sql = "select count(kodeshift) from ".static::table(pe_rwtshift)." where substring(kodeshift,1,6)='$r_kode'";			$inc = $conn->GetOne($sql);						if ($inc==0)				$kodeshift = $r_kode.'01';			else{				$inc += 1;				$kodeshift = $r_kode.str_pad($inc,'2','0', STR_PAD_LEFT);			}						return $kodeshift;		}				function getDetailShiftBulan($conn, $r_key){			$sql = "select substring(kodeshift,1,4) as tahun, substring(kodeshift,5,2) as bulan,* 					from ".static::table('pe_rwtshift')." where kodeshift='$r_key'";						$a_info = $conn->GetRow($sql);						$sql = "select noshiftdet,tglshift,jamdatang,jampulang from ".static::table('pe_rwtshiftdet')." where kodeshift='$r_key'";			$rs = $conn->Execute($sql);			$a_data = array();			while($row = $rs->FetchRow()){				$a_data[$row['tglshift']]['kode'] = $row['noshiftdet'];				$a_data[$row['tglshift']]['date'] = $row['tglshift'];				$a_data[$row['tglshift']]['jamdatang'] = $row['jamdatang'];				$a_data[$row['tglshift']]['jampulang'] = $row['jampulang'];			}						$sql = "select p.nik,t.idpegawai,".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as namalengkap					from ".static::table('pe_rwtshiftpeg')." t 					left join ".static::table('ms_pegawai')." p on p.idpegawai=t.idpegawai					where kodeshift='$r_key'";			$rs = $conn->Execute($sql);			$a_list = array();			while($row = $rs->FetchRow())				$a_list[] = $row;						return array("info" => $a_info, "data" => $a_data, "list" => $a_list);		}						/**************************************************** END of HISTORY PRESENSI ******************************************************/						/**************************************************** L E M B U R ******************************************************/		// mendapatkan kueri list untuk setting lembur		function listQuerySetLembur() {			$sql = "select * from ".static::table('ms_lembur');						return $sql;		}				function getKodeLembur($conn){			$sql = "select top 1 cast(substring(kodelembur,2,4) as int) from ".static::table('ms_lembur')." order by kodelembur desc";						$inc =  $conn->GetOne($sql);			if (empty($inc))				$kode = 'L0001';			else				$kode = 'L'.str_pad($inc,'4','0', STR_PAD_LEFT);						return $kode;		}				function listQueryRSuratLembur($key){			$sql = "select s.*, coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang)+' - '+st.jabatanstruktural as namapejabat, 					namaunit					from ".static::table('pe_suratlembur')." s					left join ".static::schema()."ms_pegawai p on p.idpegawai=s.pejabatatasan					left join ".static::schema()."ms_struktural st on st.idjstruktural=s.idjstruktural					left join ".static::schema()."ms_unit u on u.idunit=s.idunit					where s.idpegawai=$key";						return $sql;		}				function getDataEditLembur($key){			$sql = "select s.*, coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang)+' - '+st.jabatanstruktural as pejabat					from ".static::table('pe_suratlembur')." s					left join ".static::schema()."ms_pegawai p on p.idpegawai=s.pejabatatasan					left join ".static::schema()."ms_struktural st on st.idjstruktural=s.idjstruktural					where s.idsuratlembur=$key";						return $sql;		}				// mendapatkan kueri list untuk lembur kolektif		function listQueryLemburKol() {			$sql = "select k.*, coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as pejabat,					s.jabatanstruktural, u.kodeunit+' - '+u.namaunit as namaunit					from ".static::table('pe_suratlemburkol')." k					left join ".static::schema()."ms_pegawai p on p.idpegawai=k.pejabatatasan					left join ".static::schema()."ms_struktural s on s.idjstruktural=k.idjstruktural					left join ".static::schema()."ms_unit u on u.idunit=k.idunit";						return $sql;		}				// mendapatkan kueri list untuk lembur detail		function getListLemburDetail($conn,$r_key) {			$sql = "select l.*, p.nik,".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as namalengkap					from ".static::table('pe_suratlembur')." l					left join ".static::schema()."ms_pegawai p on p.idpegawai=l.idpegawai					where l.refidkolektif = $r_key";						$a_data = $conn->GetArray($sql);						return $a_data;		}				function getDataLemburDetail($conn,$r_subkey){			$sql = "select l.*, coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as pegawai					from ".static::table('pe_suratlembur')." l					left join ".static::schema()."ms_pegawai p on p.idpegawai=l.idpegawai					where l.idsuratlembur = $r_subkey";						return $sql;		}				//lembur kolektif		function getDataEditLemburKol($key){			$sql = "select k.*, coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang)+' - '+s.jabatanstruktural as pejabat					from ".static::table('pe_suratlemburkol')." k					left join ".static::schema()."ms_pegawai p on p.idpegawai=k.pejabatatasan					left join ".static::schema()."ms_struktural s on s.idjstruktural=k.idjstruktural					where k.idsuratkol=$key";						return $sql;		}				//mendapatkan data lembur kolektif		function getDataKol($conn,$r_key){			$sql = "select idjstruktural,pejabatatasan,idunit,tglpenugasan from ".static::table('pe_suratlemburkol')." where idsuratkol = $r_key";						$row = $conn->GetRow($sql);						return $row;		}				//mendapatkan daftar validasi lembur		function listQueryValLembur(){			$sql = "select k.idsuratlembur, pr.sjamdatang + ' - ' + pr.sjampulang as jamnormal, k.jamawal + ' - ' + k.jamakhir as jamlembur, pr.jamdatang + ' - ' + pr.jampulang as jamreal, 					coalesce(p.nik+' - ','')+".static::schema()."f_namalengkap(gelardepan,namadepan,namatengah,namabelakang,gelarbelakang) as namalengkap,					u.namaunit,tglpenugasan,pr.isvalid,pr.issetujuatasan, case when sdm.f_diffmenit(jamawal,jampulang) < 0 then 0 else sdm.f_diffmenit(jamawal,jampulang) end as totallembur, pr.totlembur,					pr.idpegawai, pr.tglpresensi, k.tgllembur					from ".static::table('pe_suratlembur')." k					join ".static::schema()."pe_presensidet pr on pr.idpegawai=k.idpegawai and k.tgllembur=pr.tglpresensi					left join ".static::schema()."ms_pegawai p on p.idpegawai=k.idpegawai					left join ".static::schema()."ms_unit u on u.idunit=k.idunit					where pr.jamdatang is not null and pr.jampulang is not null";						return $sql;		}						/**************************************************** END of L E M B U R ******************************************************/				/**************************************************** L A P O R A N ******************************************************/		function getLapPresensi($conn,$r_kodeunit,$r_tahun,$r_bulan,$r_idpegawai){			global $conf;			require_once($conf['gate_dir'].'model/m_unit.php');								$col = mUnit::getData($conn,$r_kodeunit);						$sql = "select t.idpegawai, v.nik, v.namalengkap, v.namaunit,v.jabatanstruktural 					from ".static::table('pe_presensidet')." t					left join ".static::schema()."v_pegawai v on v.idpegawai=t.idpegawai					where datepart(year,tglpemasukan) = '$r_tahun' and datepart(month,tglpemasukan) = '$r_bulan'";						if(!empty($r_kodeunit))				$sql .= " and v.infoleft >= ".(int)$col['infoleft']." and v.inforight <= ".(int)$col['inforight']."";			if(!empty($r_idpegawai))				$sql .= " and t.idpegawai = $r_idpegawai";						$sql .= " group by t.idpegawai, v.nik, v.namalengkap, v.namaunit,v.jabatanstruktural";			$rs1 = $conn->Execute($sql);						$a_row = array();			while ($row = $rs1->FetchRow())				$a_row[] = $row;								$sql = "select r.*,					case when jamdatang is not null then substring(jamdatang,1,2) + ':' + substring(jamdatang,3,2) end as jamdatang2,					case when jamdatang is not null then substring(jampulang,1,2) + ':' + substring(jampulang,3,2) end as jampulang2,					case when jamdatang is not null then substring(sjamdatang,1,2) + ':' + substring(sjamdatang,3,2) end as sjamdatang2,					case when jamdatang is not null then substring(sjampulang,1,2) + ':' + substring(sjampulang,3,2) end as sjampulang2,					menitdatang, menitpulang, totlembur, round(sdm.f_diffmenit(jamdatang, jampulang)/60,2) as jamkerja					from ".static::schema()."pe_presensidet r					left join ".static::schema()."ms_pegawai k on k.idpegawai=r.idpegawai					left join ".static::schema()."ms_unit u on u.idunit=k.idunit					left join ".static::schema()."ms_jenispeg v on v.idjenispegawai=k.idtipepeg					left join ".static::schema()."ms_tipepeg z on z.idtipepeg=k.idtipepeg					where datepart(year,tglpresensi) = '$r_tahun' and datepart(month,tglpresensi) = '$r_bulan'";								if(!empty($r_kodeunit))				$sql .= " and u.infoleft >= ".(int)$col['infoleft']." and u.inforight <= ".(int)$col['inforight'];			if(!empty($r_idpegawai))				$sql .= " and k.idpegawai = $r_idpegawai";			$sql .= " order by tglpresensi";						$rs = $conn->Execute($sql);						$a_row1 = array();			while ($row = $rs->FetchRow())				$a_row1[$row[idpegawai]][] = $row;						$a_data = array('pegawai' => $a_row1, 'list' => $rs, 'terima' => $a_row, 'namaunit' => $col['namaunit']);						return $a_data;					}					function getLapStatusHadir($conn,$r_kodeunit,$r_tglmulai,$r_tglselesai){			global $conf;			require_once($conf['gate_dir'].'model/m_unit.php');								$col = mUnit::getData($conn,$r_kodeunit);						$sql = "select t.idpegawai, v.nik, v.namalengkap					from ".static::table('pe_presensidet')." t					left join ".static::table('v_pegawai')." v on v.idpegawai=t.idpegawai					where  v.infoleft >= ".(int)$col['infoleft']." and v.inforight <= ".(int)$col['inforight']." 					and tglpresensi between '$r_tglmulai' and '$r_tglselesai'					group by t.idpegawai,namalengkap,v.nik";			$rs = $conn->Execute($sql);			$a_data = array();			while ($row = $rs->FetchRow())				$a_data[] = $row;						$sql = "select t.*, 					case when sdm.f_diffmenit(jamdatang, jampulang) < 0 then 0 else sdm.f_diffmenit(jamdatang, jampulang) end as menit					from ".static::table('pe_presensidet')." t					left join ".static::schema()."ms_pegawai p on p.idpegawai=t.idpegawai					left join ".static::schema()."ms_unit u on u.idunit=p.idunit					where u.infoleft >= ".(int)$col['infoleft']." and u.inforight <= ".(int)$col['inforight']." 					and t.tglpresensi between '$r_tglmulai' and '$r_tglselesai'";			$rs = $conn->Execute($sql);						$a_statusabsen = array();			$a_sumreal = array();			while ($row = $rs->FetchRow()){				if ($row['kodeabsensi'] == 'T' or $row['kodeabsensi'] == 'H'){					$a_statusabsen['H'][$row['idpegawai']]++;					$a_sumreal['H'][$row['idpegawai']] += $row['menit'];				}else{					$a_statusabsen[$row['kodeabsensi']][$row['idpegawai']]++;					if ($row['kodeabsensi'] == 'D' or $row['kodeabsensi'] == 'C')						$a_sumreal['D'][$row['idpegawai']] += $row['menit'];				}						}						$mulai=strtotime($r_tglmulai);			$selesai=strtotime($r_tglselesai);			$jnefektif=0;			$jlibur=0;			$liburan=0;			$lama=0;			$arlama=array();			$i=0;						while($mulai<=$selesai){				$nefektif=date("w",$mulai);				if($nefektif == 0 or $nefektif == 6)					$jnefektif+=1;							$mulai+=86400;				$arlama[$i++]=$mulai;			}								//Cek apakah hari cuti dalam hari liburan				if(count($arlama)>0){				$libur = $conn->Execute("select tgllibur from ".self::table('ms_liburdetail')." 						where tgllibur between '$r_tglmulai' and '$r_tglselesai' and 						datepart(dw,tgllibur) <> 1 and datepart(dw,tgllibur) <> 7");				while($rowl = $libur->FetchRow()){					if(in_array(strtotime($rowl['tgllibur']),$arlama))						$jlibur++;				}			}						$liburan = $jnefektif+$jlibur; //Mendapatkan hari libur dan non efektif			$lama = count($arlama)-$liburan;									$bebannormal = $lama*8;						$a_return = array('list' => $a_data, 'statusabsen' => $a_statusabsen, 'namaunit' => $col['namaunit'], 'jamnyata' => $a_sumreal, 'jamnormal' => $bebannormal);						return $a_return;					}					function repRekapPresensi($conn,$r_kodeunit,$r_tahun,$r_bulan){			global $conf;			require_once($conf['gate_dir'].'model/m_unit.php');								$col = mUnit::getData($conn,$r_kodeunit);						$sql = "select r.*,p.nik,".static::schema.".f_namalengkap(p.gelardepan,p.namadepan,p.namatengah,p.namabelakang,p.gelarbelakang) as namapegawai,					u.namaunit					from ".static::table('pe_presensi')." r					left join ".static::table('ms_pegawai')." p on p.idpegawai=r.idpegawai					left join ".static::table('ms_unit')." u on u.idunit=p.idunit					where substring(periode,1,4) = '$r_tahun' and substring(r.periode,5,2) = '".str_pad($r_bulan,'2','0', STR_PAD_LEFT)."'					and u.infoleft >= ".(int)$col['infoleft']." and u.inforight <= ".(int)$col['inforight']."";							$rs = $conn->Execute($sql);						$a_data = array('list' => $rs, 'namaunit' => $col['namaunit']);						return $a_data;			}				function repRekapShift($conn,$r_kodeunit,$r_mulai,$r_selesai){			global $conf;			require_once($conf['gate_dir'].'model/m_unit.php');								$col = mUnit::getData($conn,$r_kodeunit);						$a_ahari = array();			$a_ahari = mPresensi::getDayPresensi();			$a_hari = array();			$a_hari = $a_ahari['aday'];						$a_jamhadir = array();			$a_jamhadir = mPresensi::getJamHadir($conn);						$sql = "select r.kodekelkerja,k.keterangan,senin,selasa,rabu,kamis,jumat,sabtu,minggu from ".static::table('pe_rwtharikerja')." r					left join ".static::table('ms_kelkerja')." k on k.kodekelkerja=r.kodekelkerja 					where tglakhir >= '$r_selesai' group by r.kodekelkerja,k.keterangan,senin,selasa,rabu,kamis,jumat,sabtu,minggu";			$rs = $conn->Execute($sql);			$a_jamkerja = array();			$a_kelkerja = array();			while ($row = $rs->FetchRow()){				$a_kelkerja[$row['kodekelkerja']] = $row['keterangan'];				foreach($a_hari as $hari){					$a_jamkerja[$row['kodekelkerja']][$hari]['datang'] = $a_jamhadir['jamdatang'][$row[$hari]];					$a_jamkerja[$row['kodekelkerja']][$hari]['pulang'] = $a_jamhadir['jampulang'][$row[$hari]];				}			}						$sql = "select p.nik,".static::schema.".f_namalengkap(p.gelardepan,p.namadepan,p.namatengah,p.namabelakang,p.gelarbelakang) as namapegawai,					u.namaunit,k.kodekelkerja					from ".static::table('ms_pegawai')." p					left join ".static::table('pe_rwtharikerja')." k on p.idpegawai=k.idpegawai					left join ".static::table('ms_unit')." u on u.idunit=p.idunit					where tglakhir >= '$r_selesai'					and u.infoleft >= ".(int)$col['infoleft']." and u.inforight <= ".(int)$col['inforight']."";			$rs = $conn->Execute($sql);			$a_list = array();			while ($row = $rs->FetchRow()){				$a_list[$row['kodekelkerja']][] = $row;			}						$a_data = array('list' => $a_list, 'kelkerja' => $a_kelkerja, 'shift' => $a_jamkerja, 'hari' => $a_hari, 'namaunit' => $col['namaunit']);						return $a_data;			}				/**************************************************** L A P O R A N ******************************************************/		}?>